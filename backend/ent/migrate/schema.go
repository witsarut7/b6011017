// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:        "customers",
		Columns:     CustomersColumns,
		PrimaryKey:  []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "employeename", Type: field.TypeString},
		{Name: "employeepassword", Type: field.TypeString},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:        "employees",
		Columns:     EmployeesColumns,
		PrimaryKey:  []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "payday", Type: field.TypeTime},
		{Name: "customer_payment", Type: field.TypeInt, Nullable: true},
		{Name: "employee_payment", Type: field.TypeInt, Nullable: true},
		{Name: "paymenttype_payment", Type: field.TypeInt, Nullable: true},
		{Name: "roomtype_payment", Type: field.TypeInt, Nullable: true},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "payments_customers_payment",
				Columns: []*schema.Column{PaymentsColumns[2]},

				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "payments_employees_payment",
				Columns: []*schema.Column{PaymentsColumns[3]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "payments_paymenttypes_payment",
				Columns: []*schema.Column{PaymentsColumns[4]},

				RefColumns: []*schema.Column{PaymenttypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "payments_roomtypes_payment",
				Columns: []*schema.Column{PaymentsColumns[5]},

				RefColumns: []*schema.Column{RoomtypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PaymenttypesColumns holds the columns for the "paymenttypes" table.
	PaymenttypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeString},
	}
	// PaymenttypesTable holds the schema information for the "paymenttypes" table.
	PaymenttypesTable = &schema.Table{
		Name:        "paymenttypes",
		Columns:     PaymenttypesColumns,
		PrimaryKey:  []*schema.Column{PaymenttypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomtypesColumns holds the columns for the "roomtypes" table.
	RoomtypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "roomprice", Type: field.TypeInt},
	}
	// RoomtypesTable holds the schema information for the "roomtypes" table.
	RoomtypesTable = &schema.Table{
		Name:        "roomtypes",
		Columns:     RoomtypesColumns,
		PrimaryKey:  []*schema.Column{RoomtypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomersTable,
		EmployeesTable,
		PaymentsTable,
		PaymenttypesTable,
		RoomtypesTable,
	}
)

func init() {
	PaymentsTable.ForeignKeys[0].RefTable = CustomersTable
	PaymentsTable.ForeignKeys[1].RefTable = EmployeesTable
	PaymentsTable.ForeignKeys[2].RefTable = PaymenttypesTable
	PaymentsTable.ForeignKeys[3].RefTable = RoomtypesTable
}
